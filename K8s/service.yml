# DEployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-python-app-deplyment
  labels:
    app: sample-python-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sample-python-app
  template:
    metadata:
      labels:
        app: sample-python-app
    spec:
      containers:
      - name: python-app
        image: abhishekf5/python-sample-app-demo:v1
        env:
          - name: container_port 
            valueFrom:
              configMapKeyRef:
                name: sample-python-app-cm         # The ConfigMap this value comes from.
                key: container_port # The key to fetch.
        ports:
        - containerPort: 8000
        
---
# SVC
apiVersion: v1
kind: Service
metadata:
  name: sample-python-app-service
spec:
  type: NodePort
  selector:
    app: sample-python-app
  ports:
    - port: 80
      # port of your cluster
      targetPort: 8000
      # port of your app i.e port of PODs
      nodePort: 30007 # port of your host on which k8s cluster is deployed

---
# Ingress
# ''''''
# Note: ingress without ingress controller will be of no use.
# intsall ingress contrilloer on minikube using command:
#     minikube addons enable ingress
#     kubectl get pods -n ingress-nginx
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-python-app-ingress
spec:
  rules:
  - host: "foo.bar.com"
    http:
      paths:
      - pathType: Prefix
        path: "/bar"
        backend:
          service:
            name: sample-python-app-service
            port:
              number: 80

